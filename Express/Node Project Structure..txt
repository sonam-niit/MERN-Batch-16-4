Create a folder named your project
----------------------------------------

1.create package.json : npm init -y
2.install all required packages: npm i express mongoose nodemon dotenv

3.to restart the server authomatically configure package.json file add below line in scripts.

	"start": "nodemon index.js",

4. create .env file which stores the values of environmental variables of project in the form of key value pair

	to read them configure dotenv package and then
	process.end.PORT (key added in your env you can pass)

5.  Create folder Models: here we can add all models of your DB like userModel, productModel
	> user_model.js

6. Create folder controller: where add methods of CRUD operations (DB logics for add, update, delete Retrive)
	>user_controller.js

7. Create Folder routes for routing as per the request:
	>user_routes.js (get,post,put,delete, get (dynamic routes))

8. Create DBconfig file for DB connectivity which we will add in our main file

9. create main server file index.js 

	--> created server
	--> added jsonparser for read the json data coming from request
	--> added routes for diffrent paths like "/api/user"
	--> started the server

For Test Our routes used POSTMAN:

1. localhost:5000/api/user/ 
	select method POST

	pass data in body--> row --> json format

	{
    		"name":"Sonam Soni",
		"email":"sonam@gmail.com",
		"username":"sonamsoni",
    		"password":"Sonam@123"
	}

check the responses with status.

2. localhost:5000/api/user/ 

	select the method get and check response

3. localhost:5000/api/user/64e0debb50fa75a59a18627a

	method is GET
	(ID must be generated by your DB)


4. localhost:5000/api/user/64e0debb50fa75a59a18627a

	method is DELETE
	(ID must be generated by your DB)

5. localhost:5000/api/user/64e0debb50fa75a59a18627a

	method is PUT
	pass body with the data whoch you want to update
	(ID must be generated by your DB)

















